import React, { useState, createContext, useContext ,usena} from 'react';
import { useNavigate } from 'react-router-dom';
import { Link } from 'react-router-dom';
// Language Context
const LanguageContext = createContext();

// Language data
const translations = {
  en: {
    // Header
    healing: "Healing",
    with: "with",
    nature: "nature",
    bookCall: "Book a free call here",
    subtitle: "Homeopathy & Alternative Medicine Clinic",

    // About Us Summary
    aboutTitle: "About Dr. Kolhe Homeopathic Center",
    aboutSubtitle: "Premier Healthcare Excellence in Nashik",
    knowMoreButton: "Know More",
    aboutCards: [
      {
        icon: "ЁЯПе",
        title: "Leading Healthcare Institution",
        description: "Dr. Kolhe Homeopathic Center stands as Nashik's premier healthcare destination, recognized for delivering exceptional homeopathic treatment with a commitment to excellence. Our center combines traditional homeopathic wisdom with modern healthcare standards."
      },
      {
        icon: "ЁЯФм",
        title: "Evidence-Based Treatment & Immunity Solutions",
        description: "We pride ourselves on practicing evidence-based homeopathy, ensuring every treatment protocol is backed by scientific research. Our specialized immunity-boosting medicines strengthen your body's natural defense mechanisms."
      },
      {
        icon: "ЁЯУЛ",
        title: "Comprehensive Patient Care & Documentation",
        description: "We maintain meticulous patient records and feedback systems to ensure continuity of care. Every patient interaction and treatment response is carefully documented and analyzed for personalized healthcare solutions."
      }
    ],

    // Info Cards / Our Approach
    approachTitle: "Our Approach",
    approachSubtitle: "Discover the gentle power of natural healing through our comprehensive range of alternative medicine services.",
    infoCards: [
      {
        icon: "ЁЯМ▒",
        title: "Natural Healing",
        description: "Harness the power of nature with our carefully selected herbal remedies and holistic treatments."
      },
      {
        icon: "ЁЯТК",
        title: "Homeopathy",
        description: "Personalized homeopathic treatments tailored to your unique constitution and health needs."
      },
      {
        icon: "ЁЯзШтАНтЩА",
        title: "Mind-Body Balance",
        description: "Integrate mental, emotional, and physical wellness through our comprehensive approach."
      },
      {
        icon: "ЁЯМ╕",
        title: "Gentle Care",
        description: "Experience healing without harsh side effects through our gentle, natural treatment methods."
      }
    ],

    // Begin Healing Journey CTA
    journeyTitle: "Start Your Natural Wellness Journey with Dr. Kolhe",
    journeySubtitle: "Begin your path to health and balance through holistic, root-cause healing.",
    bookAppointment: "Book Appointment",
    beginNow: "Start Now",
    chatHomeopath: "Chat with Homeopath",
    buyMedicines: "Buy Medicines",
    buildKit: "Build Your Kit",

    // Services Section
    servicesTitle: "Comprehensive Homeopathic Treatments",
    servicesSubtitle: "Explore a wide range of chronic and acute conditions treated at our center.",
    servicesList: [
      { icon: "ЁЯлБ", title: "Respiratory", desc: "Asthma, allergies, sinusitis" },
      { icon: "ЁЯза", title: "Neurological", desc: "Migraines, insomnia, stress" },
      { icon: "ЁЯж┤", title: "Musculoskeletal", desc: "Arthritis, joint pain" },
      { icon: "ЁЯй║", title: "General Health", desc: "Chronic fatigue, immunity" }
    ],

    // Telehealth
    telehealthTitle: "Are you unable to visit? Book a telehealth consultation.",
    telehealthDesc: "We offer secure, professional remote consultations to help you heal from the comfort of your home.",
    bookFreeCall: "Free Call",

    // Call to Action
    ctaTitle: "In an emergency? Need help now?",
    ctaSubtitle: "Our experienced practitioners are here to help you on your journey to natural wellness. Book your consultation today and discover the healing power of nature.",
    ctaButton: "Make an Appointment"
  },

  mr: {
    // Header
    healing: "рдирд┐рд░реЛрдЧ",
    with: "рдХрд░рдгреЗ",
    nature: "рдирд┐рд╕рд░реНрдЧрд╛рдиреЗ",
    bookCall: "рдореЛрдлрдд рдХреЙрд▓ рдмреБрдХ рдХрд░рд╛",
    subtitle: "рд╣реЛрдорд┐рдУрдкреЕрдереА рдЖрдгрд┐ рдкрд░реНрдпрд╛рдпреА рд╡реИрджреНрдпрдХреАрдп рдХреНрд▓рд┐рдирд┐рдХ",

    // About Us Summary
    aboutTitle: "рдбреЙ. рдХреЛрд▓реНрд╣реЗ рд╣реЛрдорд┐рдУрдкреЕрдерд┐рдХ рд╕реЗрдВрдЯрд░ рдмрджреНрджрд▓",
    aboutSubtitle: "рдирд╛рд╢рд┐рдХрдордзреАрд▓ рдкреНрд░рдореБрдЦ рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛ рдЙрддреНрдХреГрд╖реНрдЯрддрд╛",
    knowMoreButton: "рдЕрдзрд┐рдХ рдЬрд╛рдгреВрди рдШреНрдпрд╛",
    aboutCards: [
      {
        icon: "ЁЯПе",
        title: "рдЕрдЧреНрд░рдгреА рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛ рд╕рдВрд╕реНрдерд╛",
        description: "рдбреЙ. рдХреЛрд▓реНрд╣реЗ рд╣реЛрдорд┐рдУрдкреЕрдерд┐рдХ рд╕реЗрдВрдЯрд░ рдирд╛рд╢рд┐рдХрдЪреЗ рдкреНрд░рдореБрдЦ рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛ рдХреЗрдВрджреНрд░ рдореНрд╣рдгреВрди рдУрд│рдЦрд▓реЗ рдЬрд╛рддреЗ, рдЬреЗ рдЙрддреНрдХреГрд╖реНрдЯрддреЗрдЪреНрдпрд╛ рд╡рдЪрдирдмрджреНрдзрддреЗрд╕рд╣ рдЕрдкрд╡рд╛рджрд╛рддреНрдордХ рд╣реЛрдорд┐рдУрдкреЕрдерд┐рдХ рдЙрдкрдЪрд╛рд░ рдкреНрд░рджрд╛рди рдХрд░рддреЗ. рдЖрдордЪреЗ рдХреЗрдВрджреНрд░ рдкрд╛рд░рдВрдкрд╛рд░рд┐рдХ рд╣реЛрдорд┐рдУрдкреЕрдерд┐рдХ рд╢рд╣рд╛рдгрдкрдгрд╛рд▓рд╛ рдЖрдзреБрдирд┐рдХ рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛ рдорд╛рдирдХрд╛рдВрд╕рд╣ рдПрдХрддреНрд░ рдХрд░рддреЗ."
      },
      {
        icon: "ЁЯФм",
        title: "рдкреБрд░рд╛рд╡рд╛-рдЖрдзрд╛рд░рд┐рдд рдЙрдкрдЪрд╛рд░ рдЖрдгрд┐ рд░реЛрдЧрдкреНрд░рддрд┐рдХрд╛рд░рдХ рд╢рдХреНрддреА рд╕рдорд╛рдзрд╛рди",
        description: "рдЖрдореНрд╣реА рдкреБрд░рд╛рд╡рд╛-рдЖрдзрд╛рд░рд┐рдд рд╣реЛрдорд┐рдУрдкреЕрдереАрдЪрд╛ рд╕рд░рд╛рд╡ рдХрд░рдгреНрдпрд╛рдд рдЕрднрд┐рдорд╛рди рдмрд╛рд│рдЧрддреЛ, рдкреНрд░рддреНрдпреЗрдХ рдЙрдкрдЪрд╛рд░ рдкрджреНрдзрддреА рд╡реИрдЬреНрдЮрд╛рдирд┐рдХ рд╕рдВрд╢реЛрдзрди рдЖрдгрд┐ рд╕рд┐рджреНрдз рдкрджреНрдзрддреАрдВрдиреА рд╕рдорд░реНрдерд┐рдд рдЖрд╣реЗ рдпрд╛рдЪреА рдЦрд╛рддреНрд░реА рдХрд░рддреЛ. рдЖрдордЪреА рд╡рд┐рд╢реЗрд╖ рд░реЛрдЧрдкреНрд░рддрд┐рдХрд╛рд░рдХ рд╢рдХреНрддреА рд╡рд╛рдврд╡рдгрд╛рд░реА рдФрд╖рдзреЗ рдЖрдкрд▓реНрдпрд╛ рд╢рд░реАрд░рд╛рдЪреНрдпрд╛ рдиреИрд╕рд░реНрдЧрд┐рдХ рд╕рдВрд░рдХреНрд╖рдг рдпрдВрддреНрд░рдгрд╛ рдордЬрдмреВрдд рдХрд░рддрд╛рдд."
      },
      {
        icon: "ЁЯУЛ",
        title: "рд╕рд░реНрд╡рд╕рдорд╛рд╡реЗрд╢рдХ рд░реБрдЧреНрдг рд╕реЗрд╡рд╛ рдЖрдгрд┐ рджрд╕реНрддрдРрд╡рдЬреАрдХрд░рдг",
        description: "рдЖрдореНрд╣реА рдХрд╛рд│рдЬреА рдЖрдгрд┐ рдЙрдкрдЪрд╛рд░ рдкреНрд░рднрд╛рд╡реАрддреЗрдЪреА рд╕рд╛рддрддреНрдп рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рд╕рд╛рд╡рдзрдЧрд┐рд░реАрдиреЗ рд░реБрдЧреНрдг рдиреЛрдВрджреА рдЖрдгрд┐ рдлреАрдбрдмреЕрдХ рдкреНрд░рдгрд╛рд▓реА рд░рд╛рдЦрддреЛ. рдкреНрд░рддреНрдпреЗрдХ рд░реБрдЧреНрдг рд╕рдВрдкрд░реНрдХ, рдЙрдкрдЪрд╛рд░ рдкреНрд░рддрд┐рд╕рд╛рдж рдЖрдгрд┐ рдлреАрдбрдмреЕрдХ рдХрд╛рд│рдЬреАрдкреВрд░реНрд╡рдХ рджрд╕реНрддрдРрд╡рдЬреАрдХрд░рдг рдЖрдгрд┐ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХреЗрд▓реЗ рдЬрд╛рддреЗ."
      }
    ],

    // Info Cards / Our Approach
    approachTitle: "рдЖрдордЪрд╛ рджреГрд╖реНрдЯрд┐рдХреЛрди",
    approachSubtitle: "рдЖрдордЪреНрдпрд╛ рдкрд░реНрдпрд╛рдпреА рд╡реИрджреНрдпрдХреАрдп рд╕реЗрд╡рд╛рдВрдЪреНрдпрд╛ рд╕рд░реНрд╡рд╕рдорд╛рд╡реЗрд╢рдХ рд╢реНрд░реЗрдгреАрджреНрд╡рд╛рд░реЗ рдиреИрд╕рд░реНрдЧрд┐рдХ рдЙрдкрдЪрд╛рд░рд╛рдВрдЪреА рд╕реМрдореНрдп рд╢рдХреНрддреА рд╢реЛрдзрд╛.",
    infoCards: [
      {
        icon: "ЁЯМ▒",
        title: "рдиреИрд╕рд░реНрдЧрд┐рдХ рдЙрдкрдЪрд╛рд░",
        description: "рдЖрдордЪреНрдпрд╛ рдХрд╛рд│рдЬреАрдкреВрд░реНрд╡рдХ рдирд┐рд╡рдбрд▓реЗрд▓реНрдпрд╛ рд╣рд░реНрдмрд▓ рдЙрдкрдЪрд╛рд░ рдЖрдгрд┐ рд╕рдордЧреНрд░ рдЙрдкрдЪрд╛рд░рд╛рдВрд╕рд╣ рдирд┐рд╕рд░реНрдЧрд╛рдЪреА рд╢рдХреНрддреА рд╡рд╛рдкрд░рд╛."
      },
      {
        icon: "ЁЯТК",
        title: "рд╣реЛрдорд┐рдУрдкреЕрдереА",
        description: "рдЖрдкрд▓реНрдпрд╛ рдЕрджреНрд╡рд┐рддреАрдп рд╕рдВрд╡рд┐рдзрд╛рди рдЖрдгрд┐ рдЖрд░реЛрдЧреНрдп рдЧрд░рдЬрд╛рдВрдиреБрд╕рд╛рд░ рд╡реИрдпрдХреНрддрд┐рдХреГрдд рд╣реЛрдорд┐рдУрдкреЕрдерд┐рдХ рдЙрдкрдЪрд╛рд░."
      },
      {
        icon: "ЁЯзШтАНтЩА",
        title: "рдорди-рд╢рд░реАрд░ рд╕рдВрддреБрд▓рди",
        description: "рдЖрдордЪреНрдпрд╛ рд╕рд░реНрд╡рд╕рдорд╛рд╡реЗрд╢рдХ рджреГрд╖реНрдЯрд┐рдХреЛрдирд╛рджреНрд╡рд╛рд░реЗ рдорд╛рдирд╕рд┐рдХ, рднрд╛рд╡рдирд┐рдХ рдЖрдгрд┐ рд╢рд╛рд░реАрд░рд┐рдХ рдХрд▓реНрдпрд╛рдг рдПрдХрддреНрд░рд┐рдд рдХрд░рд╛."
      },
      {
        icon: "ЁЯМ╕",
        title: "рд╕реМрдореНрдп рдХрд╛рд│рдЬреА",
        description: "рдЖрдордЪреНрдпрд╛ рд╕реМрдореНрдп, рдиреИрд╕рд░реНрдЧрд┐рдХ рдЙрдкрдЪрд╛рд░ рдкрджреНрдзрддреАрдВрджреНрд╡рд╛рд░реЗ рдХрдареЛрд░ рд╕рд╛рдЗрдб рдЗрдлреЗрдХреНрдЯреНрд╕рд╢рд┐рд╡рд╛рдп рдЙрдкрдЪрд╛рд░ рдЕрдиреБрднрд╡рд╛."
      }
    ],

    // Begin Healing Journey CTA
    journeyTitle: "рдбреЙ. рдХреЛрд▓реНрд╣реЗ рдпрд╛рдВрдЪреНрдпрд╛рд╕рд╣ рдиреИрд╕рд░реНрдЧрд┐рдХ рдЖрд░реЛрдЧреНрдп рдкреНрд░рд╡рд╛рд╕ рд╕реБрд░реВ рдХрд░рд╛",
    journeySubtitle: "рдореВрд▓ рдХрд╛рд░рдгрд╛рдВрд╡рд░ рдЙрдкрдЪрд╛рд░ рдХрд░реВрди рдЖрд░реЛрдЧреНрдп рд╡ рд╕рдорддреЛрд▓ рдорд┐рд│рд╡рд╛.",
    bookAppointment: "рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рдмреБрдХ рдХрд░рд╛",
    beginNow: "рд╕реБрд░реВ рдХрд░рд╛",
    chatHomeopath: "рд╣реЛрдорд┐рдУрдкреЕрдерд╢реА рдЪреЕрдЯ рдХрд░рд╛",
    buyMedicines: "рдФрд╖рдзреЗ рдЦрд░реЗрджреА рдХрд░рд╛",
    buildKit: "рдЖрдкрд▓рд╛ рдХрд┐рдЯ рддрдпрд╛рд░ рдХрд░рд╛",

    // Services Section
    servicesTitle: "рд╡реНрдпрд╛рдкрдХ рд╣реЛрдорд┐рдУрдкреЕрдерд┐рдХ рдЙрдкрдЪрд╛рд░",
    servicesSubtitle: "рдЖрдордЪреНрдпрд╛ рдХреНрд▓рд┐рдирд┐рдХрдордзреНрдпреЗ рд╡рд┐рд╡рд┐рдз рддреАрд╡реНрд░ рд╡ рджреАрд░реНрдШрдХрд╛рд▓реАрди рдЖрдЬрд╛рд░рд╛рдВрд╡рд░ рдЙрдкрдЪрд╛рд░ рдХреЗрд▓реЗ рдЬрд╛рддрд╛рдд.",
    servicesList: [
      { icon: "ЁЯлБ", title: "рд╢реНрд╡рд╕рди", desc: "рджрдорд╛, ре▓рд▓рд░реНрдЬреА, рд╕рд╛рдпрдирд╕" },
      { icon: "ЁЯза", title: "рдореЗрдВрджреВрдЪреЗ рд╡рд┐рдХрд╛рд░", desc: "рдорд╛рдпрдЧреНрд░реЗрди, рдЭреЛрдкреЗрдЪрд╛ рддреНрд░рд╛рд╕, рддрдгрд╛рд╡" },
      { icon: "ЁЯж┤", title: "рд╕рд╛рдВрдзреЗрджреБрдЦреА", desc: "рдЖрд░реНрдерд░рд╛рдпрдЯрд┐рд╕, рд╕рд╛рдВрдзреЗрджреБрдЦреА" },
      { icon: "ЁЯй║", title: "рд╕рд╛рдорд╛рдиреНрдп рдЖрд░реЛрдЧреНрдп", desc: "рдердХрд╡рд╛, рд░реЛрдЧрдкреНрд░рддрд┐рдХрд╛рд░рдХ рд╢рдХреНрддреА рд╡рд╛рдврд╡рд╛" }
    ],

    // Telehealth
    telehealthTitle: "рдпреЗрдК рд╢рдХрдд рдирд╛рд╣реА? рдЯреЗрд▓рд┐рд╣реЗрд▓реНрде рд╕рд▓реНрд▓рд╛ рдмреБрдХ рдХрд░рд╛.",
    telehealthDesc: "рдЖрдкрд▓реНрдпрд╛ рдШрд░реА рд░рд╛рд╣реВрди рд╕реБрд░рдХреНрд╖рд┐рдд рдЖрдгрд┐ рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдСрдирд▓рд╛рдЗрди рд╕рд▓реНрд▓рд╛ рдШреНрдпрд╛.",
    bookFreeCall: "рдореЛрдлрдд рдХреЙрд▓",

    // Call to Action
    ctaTitle: "рдЖрдгреАрдмрд╛рдгреАрдд? рдЖрддреНрддрд╛рдЪ рдорджрдд рд╣рд╡реА?",
    ctaSubtitle: "рдЖрдордЪреЗ рдЕрдиреБрднрд╡реА рдЪрд┐рдХрд┐рддреНрд╕рдХ рдЖрдкрд▓реНрдпрд╛ рдиреИрд╕рд░реНрдЧрд┐рдХ рдХрд▓реНрдпрд╛рдгрд╛рдЪреНрдпрд╛ рдкреНрд░рд╡рд╛рд╕рд╛рдд рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдпреЗрдереЗ рдЖрд╣реЗрдд. рдЖрдЬ рдЖрдкрд▓реА рд╕рд▓реНрд▓рд╛рдорд╕рд▓рдд рдмреБрдХ рдХрд░рд╛ рдЖрдгрд┐ рдирд┐рд╕рд░реНрдЧрд╛рдЪреА рдЙрдкрдЪрд╛рд░ рд╢рдХреНрддреА рд╢реЛрдзрд╛.",
    ctaButton: "рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рдШреНрдпрд╛"
  }
};



// Language Provider Component
const LanguageProvider = ({ children }) => {
  const [language, setLanguage] = useState('en');
  const toggleLanguage = () => setLanguage((prev) => (prev === 'en' ? 'mr' : 'en'));
  return (
    <LanguageContext.Provider value={{ language, toggleLanguage, t: translations[language] }}>
      {children}
    </LanguageContext.Provider>
  );
};
  
// Language Toggle Component
const LanguageToggle = () => {
  const { language, toggleLanguage } = useContext(LanguageContext);
  return (
    <button
      onClick={toggleLanguage}
      className="fixed bottom-10 left-4 z-50 bg-white text-green-600 px-4 py-2 rounded-full shadow-lg hover:bg-gray-100 transition-all duration-300 flex items-center gap-2 font-semibold"
    >
      <span className="text-lg">ЁЯМР</span>
      {language === 'en' ? 'рдорд░рд╛рдареА' : 'English'}
    </button>
  );
};


// HealingSection Component
const HealingSection = () => {
  const { t } = useContext(LanguageContext);
  const navigate = useNavigate();

  const handleBookCallClick = () => {
    navigate('/make-appointment');
  };  
  return (
    <div className="relative min-h-screen overflow-hidden">
      <video autoPlay muted loop playsInline className="absolute top-0 left-0 w-full h-full object-cover z-0">
        <source src="src/assets/Home-video.mp4" type="video/mp4" />
      </video>
      <div className="absolute inset-0 bg-gradient-to-br from-green-50/80 to-blue-50/70 z-10"></div>
      <div className="relative z-20 container mx-auto px-4 py-50 flex flex-col items-center justify-center min-h-[60vh] text-center">
        <div className="mb-10">
          <div className="flex flex-col md:flex-row items-center justify-center gap-4 mb-6">
            <h1 className="text-5xl md:text-6xl font-semibold text-green-900 animate-fade-in">{t.healing}</h1>
            <h2 className="text-3xl md:text-5xl font-medium text-green-700 animate-fade-in-delay">{t.with}</h2>
          </div>
          <div className="relative">
            <h2 className="text-5xl md:text-6xl font-semibold text-green-800 mb-10 animate-fade-in-up">{t.nature}</h2>
            <div className="relative inline-block">
              <div className="relative w-36 h-36 mx-auto mb-6 group cursor-pointer" onClick={handleBookCallClick} >
                <svg className="w-full h-full animate-spin-slow" viewBox="0 0 250 250">
                  <defs>
                    <path
                      id="circle-path"
                      d="M125,125 m-100,0 a100,100 0 1,1 200,0 a100,100 0 1,1 -200,0"
                      fill="none"
                    />
                  </defs>
                  <text fontSize="14" fill="green" fontWeight="600">
                    <textPath href="#circle-path" startOffset="0%">
                      {t.bookCall} тАв {t.bookCall} тАв {t.bookCall} тАв {t.bookCall} тАв {t.bookCall}
                    </textPath>
                  </text>
                </svg>
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="w-12 h-12 bg-green-600 rounded-full flex items-center justify-center text-white hover:bg-green-700 transition-transform group-hover:scale-110 transform duration-300">
                    <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                      <path
                        fillRule="evenodd"
                        d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                        clipRule="evenodd"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className="max-w-2xl mx-auto">
          <h3 className="text-2xl md:text-3xl font-light text-green-800 drop-shadow-md animate-fade-in-delay-2">
            {t.subtitle}
          </h3>
        </div>
      </div>
    </div>
  );
};


// About Us Summary Section
const AboutUsSummarySection = () => {
  const { t } = useContext(LanguageContext);
  return (
    <section className="py-20 bg-green-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-light text-green-800 mb-4">{t.aboutTitle}</h2>
          <p className="text-lg text-green-600 font-medium mb-8">{t.aboutSubtitle}</p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {t.aboutCards.map((card, index) => (
            <div
              key={index}
              className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 transform hover:scale-105"
            >
              <div className="text-4xl mb-4 text-center">{card.icon}</div>
              <h3 className="text-xl font-semibold text-green-800 mb-3 text-center">{card.title}</h3>
              <p className="text-gray-600 text-center leading-relaxed">{card.description}</p>
            </div>
          ))}
        </div>
        <div className="mt-12 text-center">
          <Link
            to="/about-us"
            className="inline-block bg-green-700 text-white font-semibold py-3 px-8 rounded-full shadow-md hover:bg-green-800 transition duration-300"
          >
            {t.knowMoreButton}
          </Link>
        </div>
      </div>
    </section>
  );
};

// InfoCard Component
const InfoCard = ({ icon, title, description }) => (
  <div className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 transform hover:scale-105">
    <div className="text-4xl mb-4 text-center">{icon}</div>
    <h3 className="text-xl font-semibold text-green-800 mb-3 text-center">{title}</h3>
    <p className="text-gray-600 text-center leading-relaxed">{description}</p>
  </div>
);

const InfoCardsSection = () => {
  const { t } = useContext(LanguageContext);
  return (
    <section className="py-20 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-light text-green-800 mb-4">{t.approachTitle}</h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">{t.approachSubtitle}</p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {t.infoCards.map((card, index) => (
            <InfoCard key={index} {...card} />
          ))}
        </div>
      </div>
    </section>
  );
};


// Call to Action Section
const CallToActionSection = () => {
  const { t } = useContext(LanguageContext);
  
  return (
    <section className="bg-gradient-to-r from-green-600 to-green-700 py-20 text-white">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 className="text-4xl md:text-5xl font-bold mb-6 animate-fade-in">
          {t.ctaTitle}
        </h2>
        <p className="text-lg md:text-xl max-w-2xl mx-auto mb-10 opacity-90 animate-fade-in-delay leading-relaxed">
          {t.ctaSubtitle}
        </p>
        <button className="inline-block bg-white text-green-600 px-10 py-4 rounded-full text-lg font-semibold hover:bg-gray-100 transition-all duration-300 shadow-lg transform hover:scale-105 active:scale-95 animate-zoom-in">
          {t.ctaButton}
        </button>
      </div>
    </section>
  );
};

// OnlineConsultationSection Component
import contactBg from '../assets/Contact-visitbgImage.jpg';
import servicesBg from '../assets/Services-blackandwhite.jpg';
import Float from '../components/FloatContacticon';


const BeginHealingJourneySection = () => {
  const { t } = useContext(LanguageContext);
  return (
    <section className="py-20 bg-gradient-to-br from-green-50 to-green-100">
      <div className="max-w-4xl mx-auto px-4 text-center ">
        <h2 className="text-4xl font-light text-green-800 mb-4">{t.journeyTitle}</h2>
        <p className="text-lg md:text-xl text-green-800 mb-10">{t.journeySubtitle}</p>
        <div className="flex flex-col md:flex-row items-center justify-center gap-6 mb-8">
          <Link to="/make-appointment" className="bg-green-700 text-white px-8 py-4 rounded-full text-lg font-semibold shadow-md hover:bg-green-800 transition-all duration-300">{t.bookAppointment}</Link>
          <Link to="/about-us" className="bg-white text-green-700 border border-green-700 px-8 py-4 rounded-full text-lg font-semibold shadow-md hover:bg-green-50 transition-all duration-300">{t.beginNow}</Link>
        </div>
      </div>
    </section>
  );
};

const ServicesSection = () => {
  const { t } = useContext(LanguageContext);
  return (
    <section className="py-20" style={{ backgroundColor: '#F7F3E3' }}>
  <div className="max-w-7xl mx-auto px-4">
    <h2 className="text-4xl font-light text-green-800 mb-4 text-center">{t.servicesTitle}</h2>
    <p className="text-lg text-green-800 text-center mb-12">{t.servicesSubtitle}</p>
    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
      {t.servicesList.map((service, idx) => (
        <div key={service.title} className="bg-white rounded-2xl shadow-lg p-6 flex flex-col items-center text-center hover:scale-105 transition-transform duration-300">
          <span className="text-4xl mb-3">{service.icon}</span>
          <h3 className="text-xl font-semibold text-green-800 mb-2">{service.title}</h3>
          <p className="text-gray-700">{service.desc}</p>
        </div>
      ))}
    </div>
  </div>
</section>

  );
};

const OnlineConsultationSection = () => {
  const { t } = useContext(LanguageContext);
  return (
    <section className="relative py-16 md:py-24 flex items-center justify-center overflow-hidden bg-green-100">
      <img src={contactBg} alt="Telehealth Background" className="absolute inset-0 w-full h-full object-cover opacity-40 z-0" />
      <div className="relative z-10 max-w-4xl w-full mx-auto bg-green-900/90 rounded-3xl shadow-2xl px-8 py-12 flex flex-col md:flex-row items-center gap-10">
        <div className="flex-1 text-white">
          <h2 className="text-4xl font-light text-white mb-4">{t.telehealthTitle}</h2>
          <p className="text-lg mb-2 text-green-100">{t.telehealthDesc}</p>
        </div>
        <div className="flex-1 flex items-center justify-center">
          <div className="relative w-48 h-48 flex items-center justify-center">
            <svg className="w-36 h-36" viewBox="0 0 200 200">
              <circle cx="100" cy="100" r="70" fill="#fff" />
              <text x="100" y="110" textAnchor="middle" fontSize="16" fill="#166534" fontWeight="bold">
                {t.bookFreeCall}
              </text>
            </svg>
            <Link
              to="/make-appointment"
              className="absolute inset-0 m-auto w-20 h-20 bg-green-500 hover:bg-green-600 text-white rounded-full flex items-center justify-center shadow-lg transition-transform duration-300 transform hover:scale-110 text-2xl font-bold"
              aria-label={t.bookFreeCall}
            >
              <svg className="w-8 h-8" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6 6 0 10-12 0v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"
                />
              </svg>
            </Link>
          </div>
        </div>
      </div>
    </section>
  );
};

// Main HomePage Component
function HomePage() {
  return (
    <LanguageProvider>
      <div className="min-h-screen">
        <style jsx>{`
          @keyframes fade-in {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
          }
          
          @keyframes fade-in-delay {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
          }
          
          @keyframes fade-in-up {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
          }
          
          @keyframes zoom-in {
            from { opacity: 0; transform: scale(0.8); }
            to { opacity: 1; transform: scale(1); }
          }
          
          @keyframes spin-slow {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
          }
          
          .animate-fade-in {
            animation: fade-in 1s ease-out;
          }
          
          .animate-fade-in-delay {
            animation: fade-in-delay 1s ease-out 0.3s both;
          }
          
          .animate-fade-in-delay-2 {
            animation: fade-in 1s ease-out 0.6s both;
          }
          
          .animate-fade-in-up {
            animation: fade-in-up 1s ease-out 0.4s both;
          }
          
          .animate-zoom-in {
            animation: zoom-in 0.8s ease-out 0.8s both;
          }
          
          .animate-spin-slow {
            animation: spin-slow 20s linear infinite;
          }
        `}</style>
        
        <LanguageToggle />
        <HealingSection />
        <AboutUsSummarySection />
        <InfoCardsSection />
        <BeginHealingJourneySection />
        <ServicesSection />
        <OnlineConsultationSection />
        {/* contaus and whatapp icon components */}
                  <Float/>
      </div>
    </LanguageProvider>
  );
}

export default HomePage;